<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="admin">

<!-- ================================================================================ -->
	<select id="checkPw" parameterType="String" resultType="String">
		SELECT PASSWORD FROM BFS_USER WHERE ID=#{id}
	</select>
	<select id="checkState" parameterType="String" resultType="String">
		SELECT STATE_GB FROM BFS_USER WHERE ID=#{id}
	</select>
	<select id="checkId" parameterType="String" resultType="String">
		SELECT STATE_GB FROM BFS_USER WHERE ID=#{id}
	</select>
	
	<update id="updateLoginDate" parameterType="String">
		UPDATE BFS_USER
		SET LOGIN_DATE=TO_CHAR(SYSDATE, 'YYYY/MM/DD HH24:MI:SS')
		WHERE ID=#{id}
	</update>
	
	<insert id="signUp" parameterType="hashmap">
		INSERT INTO BFS_USER
		VALUES(#{id},#{password},#{name},'US01',#{ip},TO_CHAR(SYSDATE, 'YYYY/MM/DD HH24:MI:SS'),NULL,NULL,NULL,'로그인 기록 없음')
	</insert>

	<select id="selectUserList" parameterType="hashmap" resultType="hashmap">
		SELECT * FROM 
		(SELECT ROWNUM RN,ID,PASSWORD,KOR_NAME,STATE_GB,REG_IP,REG_DATE,UPDATE_ID,UPDATE_IP,UPDATE_DATE,LOGIN_DATE
		 FROM(
		SELECT * FROM BFS_USER ORDER BY LOGIN_DATE DESC) ORDER BY RN)
		WHERE RN BETWEEN #{start} AND #{end}
	</select>

	<select id="searchUserList" parameterType="hashmap" resultType="hashmap">
		SELECT * FROM
		(SELECT ROWNUM RN,ID,PASSWORD,KOR_NAME,STATE_GB,REG_IP,REG_DATE,UPDATE_ID,UPDATE_IP,UPDATE_DATE,LOGIN_DATE
		 FROM(
		SELECT * FROM BFS_USER ORDER BY LOGIN_DATE DESC) 
		<choose>
			<when test="name != '' &amp;&amp; id == ''">
				WHERE KOR_NAME LIKE '%' || #{name} || '%' 
			</when>
			<when test="name == '' &amp;&amp; id != '' ">
				WHERE ID LIKE '%' || #{id} || '%' 
			</when>
			<when test="name != '' &amp;&amp; id != '' ">
				WHERE KOR_NAME LIKE '%' || #{name} || '%' AND ID LIKE '%' || #{id} || '%' 
			</when>
			<otherwise>
				
			</otherwise>
		</choose>
		ORDER BY RN)
		WHERE RN BETWEEN #{start} AND #{end}
	</select>
	
	<select id="getTotalRow" parameterType="hashmap" resultType="Integer">
		SELECT COUNT(*) FROM BFS_USER
		<choose>
			<when test="name != null &amp;&amp; id == null ">
				WHERE KOR_NAME LIKE '%' || #{name} || '%'
			</when>
			<when test="name == null &amp;&amp; id != null ">
				WHERE ID LIKE '%' || #{id} || '%'
			</when>
			<when test="name != null &amp;&amp; id != null ">
				WHERE KOR_NAME LIKE '%' || #{name} || '%' AND ID LIKE '%' || #{id} || '%'
			</when>
			<otherwise>
				
			</otherwise>
		</choose>
	</select>

	<select id="selectUserInfo" parameterType="String" resultType="hashmap">
		<![CDATA[
			SELECT * FROM BFS_USER WHERE ID=#{id}
		]]>
	</select>
	<select id="selectCodeInfo" parameterType="String" resultType="hashmap">
		<![CDATA[
			SELECT * FROM BFS_CODE WHERE MINOR_CD=#{minor_cd}
		]]>
	</select>

	<update id="updateUser" parameterType="first.shopping.admin.bean.MemberBean">
		UPDATE BFS_USER 
		SET KOR_NAME=#{kor_name},PASSWORD=#{password},
			UPDATE_ID=#{update_id},UPDATE_IP=#{update_ip},UPDATE_DATE=TO_CHAR(SYSDATE, 'YYYY/MM/DD HH24:MI:SS'),STATE_GB=#{state_gb}
		WHERE ID=#{id}
	</update>
<!-- ================================================================================ -->
	
	<resultMap id="CalList" type="hashmap">
		<result property="INFO" column="INFO" jdbcType="CLOB" javaType="String" />
	</resultMap>
	
	<select id="selectCalList" resultMap="CalList">
		<![CDATA[
			SELECT  OFFER_NO , SUBSTR(OFFER_NO,1,8) WORK_DATE, SUBSTR(OFFER_NO,9,2) WORK_NUM , WORK_GB,
			        (SELECT KOR_NAME FROM BFS_CODE WHERE MAJOR_CD = 'WKGB' AND MINOR_CD = WORK_GB) WORK_KOR
			FROM    BFS_PRODUCT
			WHERE   SUBSTR(OFFER_NO,1,6) = DECODE(#{month},'12',#{year}||#{month},'11',#{year}||#{month},'10',#{year}||#{month},#{year}||'0'||#{month})
			GROUP BY OFFER_NO, WORK_GB
			ORDER BY WORK_DATE ASC
		]]>
	</select>
	
	<resultMap id="CodeList" type="hashmap">
		<result property="INFO" column="INFO" jdbcType="CLOB" javaType="String" />
	</resultMap>
	
	
	<select id="searchCodeList" resultMap="CodeList">
		SELECT * FROM 
		(SELECT ROWNUM RN, A.* FROM BFS_CODE A
		WHERE MAJOR_CD = 'PRGB'
		<if test="name != null">
			AND KOR_NAME LIKE '%' || #{name} || '%' 
		</if>
		<if test="use != null">
			AND USE_GB LIKE '%' || #{use} || '%' 
		</if>
		ORDER BY USE_GB DESC, MINOR_CD ASC)
		WHERE RN BETWEEN #{start} AND #{end}
	</select>
	
	<select id="Code_getTotalRow" parameterType="hashmap" resultType="Integer">
		SELECT COUNT(*) FROM BFS_CODE
		WHERE MAJOR_CD = 'PRGB'
		<if test="name != null">
			AND KOR_NAME LIKE '%' || #{name} || '%' 
		</if>
		<if test="use != null">
			AND USE_GB LIKE '%' || #{use} || '%' 
		</if>
	</select>

	<select id="Product_getTotalRow" parameterType="hashmap" resultType="Integer">
		SELECT COUNT(OFFER_NO) FROM (
		SELECT  OFFER_NO , WORK_GB
		FROM    BFS_PRODUCT
		WHERE   1=1
		AND SUBSTR(OFFER_NO,1,8) BETWEEN #{strdate} and #{enddate}
		AND WORK_GB LIKE '%'||#{workgb}||'%' 
		GROUP BY OFFER_NO, WORK_GB)
	</select>
	
	<resultMap id="ProductList" type="hashmap">
	<result property="INFO" column="INFO" jdbcType="CLOB" javaType="String" />
	</resultMap>
	
	
	<select id="searchProductList" resultMap="ProductList">
		SELECT  OFFER_NO
				, SUBSTR(OFFER_NO,1,4)||'년'||SUBSTR(OFFER_NO,5,2)||'월'|| SUBSTR(OFFER_NO,7,2)||'일' WORK_DATE
				, SUBSTR(OFFER_NO,9,2) WORK_NUM 
				, WORK_GB
				, (SELECT KOR_NAME FROM BFS_CODE WHERE MAJOR_CD = 'WKGB' AND MINOR_CD = WORK_GB) WORK_KOR
				, MAGAM_GB
			FROM    BFS_PRODUCT
			WHERE   1=1
		<if test="strdate != null &amp;&amp; enddate != null">
			AND SUBSTR(OFFER_NO,1,8) BETWEEN #{strdate} and #{enddate}
		</if>
		<if test="workgb != null">
			AND WORK_GB = '#{workgb}' 
		</if>
		GROUP BY OFFER_NO, WORK_GB, MAGAM_GB
		ORDER BY OFFER_NO DESC
	</select>
	
	<resultMap id="ProductList_Detail" type="hashmap">
	<result property="INFO" column="INFO" jdbcType="CLOB" javaType="String" />
	</resultMap>
	

	<select id="searchProductList_Detail" resultMap="ProductList_Detail">
		<![CDATA[
			SELECT a.OFFER_NO, a.WORK_GB, a.PRO_GB 
					, (SELECT KOR_NAME FROM BFS_CODE WHERE MAJOR_CD = 'PRGB' AND MINOR_CD = a.PRO_GB) KOR_NAME 
			        , a.PRE_QTY+b.PRE_QTY PRE_TOTAL_QTY
			        , DECODE(a.QTY,-999999,0,a.QTY)+decode(b.QTY,-999999,0,b.QTY) TOTAL_QTY
			        , a.PRE_QTY PRE_QTY_ST01, DECODE(a.QTY,-999999,0,a.QTY) QTY_ST01
			        , b.PRE_QTY PRE_QTY_ST02, DECODE(b.QTY,-999999,0,b.QTY) QTY_ST02
			        , a.PRE_QTY+b.PRE_QTY+DECODE(a.QTY,-999999,0,a.QTY)+DECODE(b.QTY,-999999,0,b.QTY) END_TOTAL_QTY
			        , a.PRE_QTY+DECODE(a.QTY,-999999,0,a.QTY) END_QTY_ST01
			        , b.PRE_QTY+DECODE(b.QTY,-999999,0,b.QTY) END_QTY_ST02
			        
			FROM (
			SELECT OFFER_NO,WORK_GB,PRO_GB,SUM(PRE_QTY) PRE_QTY, SUM(QTY) QTY  FROM(
			    SELECT OFFER_NO,WORK_GB,PRO_GB,STATE_GB
			        ,NVL((SELECT SUM(QTY) FROM BFS_PRODUCT WHERE OFFER_NO < #{offer_no} AND STATE_GB = 'ST01' AND PRO_GB = A.PRO_GB),0) PRE_QTY
			        ,NVL(QTY,0) QTY
			    FROM BFS_PRODUCT A
			    WHERE OFFER_NO = #{offer_no}
			    AND STATE_GB = 'ST01'
			    UNION
			    SELECT #{offer_no} OFFER_NO,  #{work_gb} WORK_GB, PRO_GB, 'ST01' STATE_GB
			            , NVL((SELECT SUM(QTY) FROM BFS_PRODUCT WHERE OFFER_NO < #{offer_no} AND STATE_GB = 'ST01' AND PRO_GB = A.PRO_GB),0) PRE_QTY
			            , -999999 QTY
			    FROM(
			        SELECT MINOR_CD PRO_GB FROM BFS_CODE 
			        WHERE MAJOR_CD = 'PRGB'
			        AND USE_GB = 'Y'
			        MINUS
			        SELECT PRO_GB FROM BFS_PRODUCT
			        WHERE OFFER_NO = #{offer_no}
			        AND STATE_GB = 'ST01') A
			        )
			GROUP BY OFFER_NO,WORK_GB,PRO_GB) a,
			(SELECT OFFER_NO,WORK_GB,PRO_GB,SUM(PRE_QTY) PRE_QTY, SUM(QTY) QTY FROM(
			    SELECT OFFER_NO,WORK_GB,PRO_GB,STATE_GB
			        ,NVL((SELECT SUM(QTY) FROM BFS_PRODUCT WHERE OFFER_NO < #{offer_no} AND STATE_GB = 'ST02' AND PRO_GB = A.PRO_GB),0) PRE_QTY
			        ,NVL(QTY,0) QTY
			    FROM BFS_PRODUCT A
			    WHERE OFFER_NO = #{offer_no}
			    AND STATE_GB = 'ST02'
			    UNION
			    SELECT #{offer_no} OFFER_NO, #{work_gb} WORK_GB, PRO_GB, 'ST02' STATE_GB 
			            , NVL((SELECT SUM(QTY) FROM BFS_PRODUCT WHERE OFFER_NO < #{offer_no} AND STATE_GB = 'ST02' AND PRO_GB = A.PRO_GB),0) PRE_QTY
			            , -999999 QTY
			    FROM(
			        SELECT MINOR_CD PRO_GB FROM BFS_CODE 
			        WHERE MAJOR_CD = 'PRGB'
			        AND USE_GB = 'Y'
			        MINUS
			        SELECT PRO_GB FROM BFS_PRODUCT
			        WHERE OFFER_NO = #{offer_no}
			        AND STATE_GB = 'ST02') A
			        )
			GROUP BY OFFER_NO,WORK_GB,PRO_GB)b
			where a.offer_no = b.offer_no
			and  a.work_gb = b.work_gb 
			and  a.pro_gb = b.pro_gb
			ORDER BY PRO_GB ASC
		]]>
	</select>
	
	
	<select id="searchinfo" resultMap="ProductList_Detail">
		<![CDATA[
			SELECT OFFER_NO
					,A.WORK_GB
					,SUBSTR(A.OFFER_NO,1,4)||'년'||SUBSTR(A.OFFER_NO,5,2)||'월'||SUBSTR(A.OFFER_NO,7,2)||'일' WORK_DATE_KR
					,SUBSTR(A.OFFER_NO,1,8) WORK_DATE
					,(SELECT KOR_NAME 
						FROM BFS_CODE 
						WHERE MAJOR_CD = 'WKGB'
						AND MINOR_CD = A.WORK_GB) WORK_GB_KR
					,NVL(A.MAGAM_GB,'N') MAGAM_GB
			FROM	BFS_PRODUCT A
			WHERE	A.OFFER_NO = #{offer_no}	
			GROUP BY A.OFFER_NO, A.WORK_GB, A.MAGAM_GB
		]]>
	</select>
	
	<select id="serchofferno" parameterType="String" resultType="String">
		SELECT MAX(OFFER_NO)+1 OFFER_NO
		FROM(
			SELECT OFFER_NO FROM BFS_PRODUCT WHERE SUBSTR(OFFER_NO,1,8)= TO_CHAR(CURRENT_TIMESTAMP, 'YYYYMMDD')
			UNION
			SELECT TO_CHAR(CURRENT_TIMESTAMP, 'YYYYMMDD')||'00' FROM DUAL
			)
	</select>
	
	
	<insert id="ipgoinsert_st01" parameterType="hashmap">
		INSERT INTO BFS_PRODUCT (OFFER_NO, WORK_GB, PRO_GB, STATE_GB, QTY, UPDATE_DATE, UPDATE_MAN, MAGAM_GB)
		VALUES(#{OFFER_NO},'WK01',#{PRO_GB},'ST01',#{QTY_ST01},SYSDATE,'TEST','N')
	</insert>
	
	<insert id="ipgoinsert_st02" parameterType="hashmap">
		INSERT INTO BFS_PRODUCT (OFFER_NO, WORK_GB, PRO_GB, STATE_GB, QTY, UPDATE_DATE, UPDATE_MAN, MAGAM_GB)
		VALUES(#{OFFER_NO},'WK01',#{PRO_GB},'ST02',#{QTY_ST02},SYSDATE,'TEST','N')
	</insert>
	
	<insert id="jegoinsert_st01_wk02" parameterType="hashmap">
		INSERT INTO BFS_PRODUCT (OFFER_NO, WORK_GB, PRO_GB, STATE_GB, QTY, UPDATE_DATE, UPDATE_MAN, MAGAM_GB)
		VALUES(#{OFFER_NO},'WK02',#{PRO_GB},'ST01',#{QTY_ST01},SYSDATE,'TEST','N')
	</insert>
	
	<insert id="jegoinsert_st02_wk02" parameterType="hashmap">
		INSERT INTO BFS_PRODUCT (OFFER_NO, WORK_GB, PRO_GB, STATE_GB, QTY, UPDATE_DATE, UPDATE_MAN, MAGAM_GB)
		VALUES(#{OFFER_NO},'WK02',#{PRO_GB},'ST02',#{QTY_ST02},SYSDATE,'TEST','N')
	</insert>
	
	<insert id="jegoinsert_st01_wk03" parameterType="hashmap">
		INSERT INTO BFS_PRODUCT (OFFER_NO, WORK_GB, PRO_GB, STATE_GB, QTY, UPDATE_DATE, UPDATE_MAN, MAGAM_GB)
		VALUES(#{OFFER_NO},'WK03',#{PRO_GB},'ST01',-#{QTY_ST01},SYSDATE,'TEST','N')
	</insert>
	
	<insert id="jegoinsert_st02_wk03" parameterType="hashmap">
		INSERT INTO BFS_PRODUCT (OFFER_NO, WORK_GB, PRO_GB, STATE_GB, QTY, UPDATE_DATE, UPDATE_MAN, MAGAM_GB)
		VALUES(#{OFFER_NO},'WK03',#{PRO_GB},'ST02',-#{QTY_ST02},SYSDATE,'TEST','N')
	</insert>
	
	<delete id="product_delete" parameterType="hashmap">
		DELETE FROM BFS_PRODUCT
		WHERE OFFER_NO = #{offer_no}
	</delete>
	
	<update id="magam" parameterType="hashmap">
		<![CDATA[
			UPDATE BFS_PRODUCT
			SET MAGAM_GB = 'Y' 
			WHERE NVL(MAGAM_GB,'N') = 'N' 
			AND offer_no <> #{offer_no}
		]]>
	</update>
	
	<select id="magamcheck" parameterType="hashmap">
		SELECT MAGAM_GB 
		FROM BFS_PRODUCT
		WHERE OFFER_NO = #{offer_no}
	</select>
	
	<select id="pro_det_jego_wk03" resultMap="ProductList_Detail">
		<![CDATA[
			SELECT a.OFFER_NO, a.WORK_GB, a.PRO_GB 
			        , (SELECT KOR_NAME FROM BFS_CODE WHERE MAJOR_CD = 'PRGB' AND MINOR_CD = a.PRO_GB) KOR_NAME 
			        , DECODE(a.QTY,-999999,0,a.QTY)+decode(b.QTY,-999999,0,b.QTY) TOTAL_QTY
			        , DECODE(a.QTY,-999999,0,a.QTY) QTY_ST01
			        , DECODE(b.QTY,-999999,0,b.QTY) QTY_ST02
			FROM (
			        SELECT OFFER_NO,WORK_GB,PRO_GB, SUM(QTY) QTY 
			        FROM(
			                SELECT OFFER_NO,WORK_GB,PRO_GB,STATE_GB
			                    ,NVL(QTY,0) QTY
			                FROM BFS_PRODUCT A
			                WHERE OFFER_NO = #{offer_no}
			                AND STATE_GB = 'ST01'
			                AND WORK_GB = 'WK03'
			                UNION
			                SELECT #{offer_no}  OFFER_NO,  'WK03' WORK_GB, PRO_GB, 'ST01' STATE_GB
			                        , -999999 QTY
			                FROM(
			                    SELECT MINOR_CD PRO_GB FROM BFS_CODE 
			                    WHERE MAJOR_CD = 'PRGB'
			                    AND USE_GB = 'Y'
			                    MINUS
			                    SELECT PRO_GB FROM BFS_PRODUCT
			                    WHERE OFFER_NO = #{offer_no}
			                    AND STATE_GB = 'ST01'
			                    AND WORK_GB = 'WK03') A
			                            )
			        GROUP BY OFFER_NO,WORK_GB,PRO_GB
			    ) a,
			    (
			        SELECT OFFER_NO,WORK_GB,PRO_GB, SUM(QTY) QTY 
			        FROM(
			            SELECT OFFER_NO,WORK_GB,PRO_GB,STATE_GB
			                ,NVL(QTY,0) QTY
			            FROM BFS_PRODUCT A
			            WHERE OFFER_NO = #{offer_no}
			            AND STATE_GB = 'ST02'
			            AND WORK_GB = 'WK03'
			            UNION
			            SELECT #{offer_no} OFFER_NO, 'WK03' WORK_GB, PRO_GB, 'ST02' STATE_GB 
			                    , -999999 QTY
			            FROM(
			                SELECT MINOR_CD PRO_GB FROM BFS_CODE 
			                WHERE MAJOR_CD = 'PRGB'
			                AND USE_GB = 'Y'
			                MINUS
			                SELECT PRO_GB FROM BFS_PRODUCT
			                WHERE OFFER_NO = #{offer_no}
			                AND STATE_GB = 'ST02'
			                AND WORK_GB = 'WK03') A
			                )
			        GROUP BY OFFER_NO,WORK_GB,PRO_GB
			    )b
			where a.offer_no = b.offer_no
			and  a.work_gb = b.work_gb 
			and  a.pro_gb = b.pro_gb
			ORDER BY PRO_GB ASC
		]]>
	</select>
	
	
	<select id="pro_det_jego_wk02" parameterType="hashmap" resultMap="ProductList_Detail">
		<![CDATA[
			SELECT a.OFFER_NO, a.WORK_GB, a.PRO_GB 
			        , (SELECT KOR_NAME FROM BFS_CODE WHERE MAJOR_CD = 'PRGB' AND MINOR_CD = a.PRO_GB) KOR_NAME 
			        , DECODE(a.QTY,-999999,0,a.QTY)+decode(b.QTY,-999999,0,b.QTY) TOTAL_QTY
			        , DECODE(a.QTY,-999999,0,a.QTY) QTY_ST01
			        , DECODE(b.QTY,-999999,0,b.QTY) QTY_ST02
			FROM (
			        SELECT OFFER_NO,WORK_GB,PRO_GB, SUM(QTY) QTY 
			        FROM(
			                SELECT OFFER_NO,WORK_GB,PRO_GB,STATE_GB
			                    ,NVL(QTY,0) QTY
			                FROM BFS_PRODUCT A
			                WHERE OFFER_NO = #{offer_no}
			                AND STATE_GB = 'ST01'
			                AND WORK_GB = 'WK02'
			                UNION
			                SELECT #{offer_no}  OFFER_NO,  'WK02' WORK_GB, PRO_GB, 'ST01' STATE_GB
			                        , -999999 QTY
			                FROM(
			                    SELECT MINOR_CD PRO_GB FROM BFS_CODE 
			                    WHERE MAJOR_CD = 'PRGB'
			                    AND USE_GB = 'Y'
			                    MINUS
			                    SELECT PRO_GB FROM BFS_PRODUCT
			                    WHERE OFFER_NO = #{offer_no}
			                    AND STATE_GB = 'ST01'
			                    AND WORK_GB = 'WK02') A
			                            )
			        GROUP BY OFFER_NO,WORK_GB,PRO_GB
			    ) a,
			    (
			        SELECT OFFER_NO,WORK_GB,PRO_GB, SUM(QTY) QTY 
			        FROM(
			            SELECT OFFER_NO,WORK_GB,PRO_GB,STATE_GB
			                ,NVL(QTY,0) QTY
			            FROM BFS_PRODUCT A
			            WHERE OFFER_NO = #{offer_no}
			            AND STATE_GB = 'ST02'
			            AND WORK_GB = 'WK02'
			            UNION
			            SELECT #{offer_no} OFFER_NO, 'WK02' WORK_GB, PRO_GB, 'ST02' STATE_GB 
			                    , -999999 QTY
			            FROM(
			                SELECT MINOR_CD PRO_GB FROM BFS_CODE 
			                WHERE MAJOR_CD = 'PRGB'
			                AND USE_GB = 'Y'
			                MINUS
			                SELECT PRO_GB FROM BFS_PRODUCT
			                WHERE OFFER_NO = #{offer_no}
			                AND STATE_GB = 'ST02'
			                AND WORK_GB = 'WK02') A
			                )
			        GROUP BY OFFER_NO,WORK_GB,PRO_GB
			    )b
			where a.offer_no = b.offer_no
			and  a.work_gb = b.work_gb 
			and  a.pro_gb = b.pro_gb
			ORDER BY PRO_GB ASC
		]]>
	</select>
	
	<select id="pro_det_jego_pre" resultMap="ProductList_Detail">
		<![CDATA[
			SELECT A.PRO_GB, B.QTY PRE_QTY_ST02, A.QTY PRE_QTY_ST01 , (B.QTY + A.QTY) PRE_TOTAL_QTY 
			       ,(SELECT KOR_NAME FROM BFS_CODE WHERE MAJOR_CD = 'PRGB' AND MINOR_CD = A.PRO_GB) KOR_NAME
			FROM
			    (SELECT   MINOR_CD PRO_GB 
			             ,NVL((SELECT SUM(QTY) FROM BFS_PRODUCT WHERE OFFER_NO < #{offer_no} AND PRO_GB = A.MINOR_CD AND STATE_GB = 'ST01'),'0') QTY
			    FROM BFS_CODE A
			    WHERE    MAJOR_CD = 'PRGB'
			    AND      USE_GB = 'Y') A,
			    (SELECT   MINOR_CD PRO_GB 
			             ,NVL((SELECT SUM(QTY) FROM BFS_PRODUCT WHERE OFFER_NO < #{offer_no} AND PRO_GB = A.MINOR_CD AND STATE_GB = 'ST02'),'0') QTY
			    FROM BFS_CODE A
			    WHERE    MAJOR_CD = 'PRGB'
			    AND      USE_GB = 'Y') B
			WHERE A.PRO_GB = B.PRO_GB
			ORDER BY A.PRO_GB ASC
		]]>
	</select>
	
	


</mapper>

